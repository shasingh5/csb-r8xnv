{"version":3,"sources":["components/cardSkeleton.js","components/cardWeather.js","components/searchBlock.js","App.js","index.js"],"names":["CardSkeleton","class","className","CardWeather","tempInfo","temp_c","temp_f","status","icon","humidity","city","country","region","pressure_in","wind_mph","localtime","src","alt","SearchBlock","searchValue","getWeatherData","handleChange","type","placeholder","value","onChange","id","onClick","App","useState","setSearchValue","setTempInfo","loading","setLoading","a","url","fetch","response","json","data","current","condition","text","location","name","local_time","localtime_epoch","console","log","useEffect","setTimeout","width","e","target","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e28ffb37.chunk.js","sourcesContent":["import Skeleton from \"react-loading-skeleton\";\r\n\r\nconst CardSkeleton = () => {\r\n  return (\r\n    <>\r\n      <h4 class=\"card-title\">\r\n        <Skeleton />\r\n      </h4>\r\n      <div class=\"card text-center\">\r\n        <div class=\"card-header\">\r\n          <Skeleton />\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <h4 class=\"card-title\">\r\n                <Skeleton />\r\n              </h4>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <h4 class=\"card-title\">\r\n                <Skeleton />\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <p className=\"fs-6\">\r\n            <Skeleton />\r\n          </p>\r\n          <p className=\"fs-6\">\r\n            <Skeleton />\r\n          </p>\r\n          <hr />\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <Skeleton />\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <Skeleton />\r\n            </div>\r\n          </div>\r\n          <hr />\r\n\r\n          <div className=\"row py-3\">\r\n            <div className=\"col\">\r\n              <p class=\"card-text\">\r\n                <Skeleton />\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col\">\r\n              <p class=\"card-text\">\r\n                <Skeleton />\r\n              </p>\r\n            </div>\r\n            <div className=\"col\">\r\n              <p class=\"card-text\">\r\n                <Skeleton />\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-footer text-muted\">\r\n          <Skeleton />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardSkeleton;\r\n","const CardWeather = ({ tempInfo }) => {\r\n  const {\r\n    temp_c,\r\n    temp_f,\r\n    status,\r\n    icon,\r\n    humidity,\r\n    city,\r\n    country,\r\n    region,\r\n    pressure_in,\r\n    wind_mph,\r\n    // local_time,\r\n    localtime\r\n  } = tempInfo;\r\n  return (\r\n    <>\r\n      <div class=\"card text-center\">\r\n        <div class=\"card-header\">\r\n          Live weather in <strong>{city}</strong>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <h4 class=\"card-title\">{temp_c}°C</h4>\r\n            </div>\r\n            <div className=\"col-6 d-flex justify-content-center align-items-center\">\r\n              <h4 class=\"card-title\">{temp_f}°F</h4>\r\n            </div>\r\n          </div>\r\n          <p className=\"fs-6\">\r\n            <i class=\"wi wi-thermometer\"></i> Temperature\r\n          </p>\r\n          <p className=\"fs-6\">Local Date & Time: {localtime}</p>\r\n          <hr />\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <img src={icon} alt={city} />\r\n            </div>\r\n            <div className=\"col-6 d-flex justify-content-center align-items-center\">\r\n              <p class=\"card-text\">{status}</p>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n\r\n          <div className=\"row py-3\">\r\n            <div className=\"col\">\r\n              <p class=\"card-text\">\r\n                {humidity} % <br /> <i class=\"wi wi-humidity\"></i> Humidity\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col\">\r\n              <p class=\"card-text\">\r\n                {pressure_in} in <br /> <i class=\"wi wi-barometer\"></i> Pressure\r\n              </p>\r\n            </div>\r\n            <div className=\"col\">\r\n              <p class=\"card-text\">\r\n                {wind_mph} mph <br /> <i class=\"wi wi-strong-wind\"></i> Wind\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-footer text-muted\">\r\n          {city}, {region}, {country}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardWeather;\r\n","const SearchBlock = ({ searchValue, getWeatherData, handleChange }) => {\r\n  return (\r\n    <>\r\n      <div class=\"input-group mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Search city\"\r\n          aria-label=\"Search city\"\r\n          aria-describedby=\"button-addon2\"\r\n          value={searchValue}\r\n          onChange={handleChange}\r\n        />\r\n        <button\r\n          class=\"btn btn-secondary\"\r\n          type=\"button\"\r\n          id=\"button-addon2\"\r\n          onClick={getWeatherData}\r\n        >\r\n          Search <i class=\"wi wi-night-sleet\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBlock;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport CardSkeleton from \"./components/cardSkeleton\";\nimport CardWeather from \"./components/cardWeather\";\nimport SearchBlock from \"./components/searchBlock\";\n// import AutoSearch from \"./components/autoSearch\";\n\nexport default function App() {\n  const [searchValue, setSearchValue] = useState(\"Delhi\");\n  const [tempInfo, setTempInfo] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  const getWeatherData = async () => {\n    try {\n      let url = `https://api.weatherapi.com/v1/current.json?key=bbc3b8ff550c491e99963810211509&q=${searchValue}&aqi=yes`;\n      let response = await fetch(url);\n      let data = await response.json();\n      setLoading(false);\n      const { temp_c, temp_f, humidity, pressure_in, wind_mph } = data.current;\n      const { text: status, icon } = data.current.condition;\n      const {\n        name: city,\n        country,\n        region,\n        localtime_epoch: local_time,\n        localtime\n      } = data.location;\n      console.log(data);\n\n      console.log(temp_c, temp_f, status, pressure_in, localtime);\n      const tempData = {\n        temp_c,\n        temp_f,\n        status,\n        icon,\n        humidity,\n        city,\n        country,\n        region,\n        pressure_in,\n        wind_mph,\n        local_time,\n        localtime\n      };\n      setTempInfo(tempData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // const {\n  //   temp_c,\n  //   temp_f,\n  //   status,\n  //   icon,\n  //   humidity,\n  //   city,\n  //   country,\n  //   region,\n  //   pressure_in,\n  //   wind_mph,\n  //   local_time,\n  //   localtime\n  // } = tempInfo;\n\n  // let second = local_time;\n  // let date = new Date(second * 1000);\n  // let time = `${date.getHours()}:${date.getMinutes()}`;\n\n  const handleChange = (e) => {\n    setSearchValue(e.target.value);\n    // console.log(e.target.value);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      getWeatherData();\n    }, 1000);\n  }, []);\n\n  // if (searchValue.length === 0) {\n  //   return \"Data Loading...\";\n  // }\n\n  return (\n    <div className=\"main-card\" width=\"200px\">\n      {loading ? (\n        <CardSkeleton />\n      ) : (\n        <>\n          <SearchBlock\n            searchValue={searchValue}\n            getWeatherData={getWeatherData}\n            handleChange={handleChange}\n          />\n\n          <CardWeather tempInfo={tempInfo} />\n        </>\n      )}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}